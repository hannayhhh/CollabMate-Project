{
  "openapi": "3.0.3",
  "info": {
    "title": "CollabMate API",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "todo",
              "in_progress",
              "done"
            ]
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teamId": {
            "type": "string",
            "nullable": true
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "email",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "JWT token returned"
          },
          "400": {
            "description": "Missing or invalid input"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login with email and password",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token returned"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/dashboard/calendar": {
      "get": {
        "summary": "Get all task deadlines for calendar",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of task deadlines"
          },
          "401": {
            "description": "Unauthorized - missing or invalid token"
          }
        }
      }
    },
    "/dashboard/summary": {
      "get": {
        "summary": "Get task completion summary",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Summary with total, completed, remaining"
          },
          "401": {
            "description": "Unauthorized - missing or invalid token"
          }
        }
      }
    },
    "/dashboard/taskProgress/{taskId}": {
      "get": {
        "summary": "Get progress percentage of a specific task",
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task progress info"
          },
          "401": {
            "description": "Unauthorized - missing or invalid token"
          }
        }
      }
    },
    "/gitlab/login": {
      "get": {
        "summary": "Redirect user to GitLab OAuth login",
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to GitLab login page"
          },
          "401": {
            "description": "Missing or invalid token"
          }
        }
      }
    },
    "/gitlab/callback": {
      "get": {
        "summary": "Handle GitLab OAuth callback and store access token",
        "tags": [
          "GitLab"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": true,
            "description": "Authorization code from GitLab",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "state",
            "required": true,
            "description": "User ID passed as state",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "GitLab account linked successfully"
          },
          "400": {
            "description": "Missing code or state"
          },
          "500": {
            "description": "GitLab OAuth failed"
          }
        }
      }
    },
    "/gitlab/user": {
      "get": {
        "summary": "Get authenticated GitLab user's profile info",
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "GitLab user profile retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "GitLab API request failed"
          }
        }
      }
    },
    "/gitlab/projects": {
      "get": {
        "summary": "Get projects accessible to the authenticated GitLab user",
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of GitLab projects retrieved"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "GitLab API request failed"
          }
        }
      }
    },
    "/gitlab/unlink": {
      "delete": {
        "summary": "Unlink GitLab from the current user account",
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "GitLab unlinked successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/gitlab/projects/names": {
      "get": {
        "summary": "Get user's GitLab project ID and name list",
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of { id, name } for GitLab projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "GitLab not linked"
          }
        }
      }
    },
    "/gitlab/projects/{projectId}/issues/as-tasks": {
      "get": {
        "summary": "Import GitLab project issues as local tasks",
        "description": "Fetch issues from the specified GitLab project and convert them to local task format.\nAutomatically maps title, description, state, and assignees (if matched).\n",
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "GitLab project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched and converted issues",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "GitLab issues converted to tasks"
                    },
                    "tasks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Task"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "GitLab not linked"
          },
          "500": {
            "description": "GitLab API error or transformation failure"
          }
        }
      }
    },
    "/gitlab/projects/{projectId}/issues/ids": {
      "get": {
        "summary": "Get basic issue info from a GitLab project",
        "description": "Return simplified list of issueId, title, issueIid and state from GitLab project.\nUseful for preview, selection or matching.\n",
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "GitLab project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of simplified issue objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "issueId": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "opened",
                          "closed"
                        ]
                      },
                      "issueIid": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "GitLab not linked"
          },
          "500": {
            "description": "GitLab API error"
          }
        }
      }
    },
    "/gitlab/projects/{projectId}/issues/{issueIid}": {
      "get": {
        "summary": "Get single GitLab issue and convert to local task",
        "description": "Fetch one issue from GitLab by projectId and issueIid,\nand create a corresponding local task (without saving if already exists).\n",
        "tags": [
          "GitLab"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "GitLab project ID"
          },
          {
            "in": "path",
            "name": "issueIid",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "GitLab issue IID"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully imported as task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "task": {
                      "$ref": "#/components/schemas/Task"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized or GitLab not linked"
          },
          "404": {
            "description": "GitLab issue not found"
          },
          "500": {
            "description": "Failed to import issue"
          }
        }
      }
    },
    "/search": {
      "get": {
        "summary": "Fuzzy search tasks, users, or teams",
        "description": "Search tasks , users, or teams by keyword.",
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "task",
                "user",
                "team"
              ]
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of matched results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid parameters"
          }
        }
      }
    },
    "/task": {
      "post": {
        "summary": "Create a new task",
        "tags": [
          "Task"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "userId"
                ],
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Task created"
          },
          "400": {
            "description": "Missing title or userId"
          },
          "401": {
            "description": "Unauthorized - missing or invalid token"
          }
        }
      },
      "get": {
        "summary": "Get tasks",
        "description": "Optionally filtered by status, teamId, userId",
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "teamId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered task list"
          }
        }
      }
    },
    "/task/{taskId}": {
      "put": {
        "summary": "Update a task by ID",
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated"
          },
          "401": {
            "description": "Unauthorized - missing or invalid token"
          }
        }
      },
      "delete": {
        "summary": "Delete a task by ID (with cascade update user references)",
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "task": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/task/{taskId}/assign": {
      "patch": {
        "summary": "Assign a user to a task",
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId"
                ],
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User assigned to task"
          },
          "401": {
            "description": "Unauthorized - missing or invalid token"
          }
        }
      }
    },
    "/task/{taskId}/status": {
      "patch": {
        "summary": "Change task status",
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "newStatus"
                ],
                "properties": {
                  "newStatus": {
                    "type": "string",
                    "enum": [
                      "To Do",
                      "In Progress",
                      "Done"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Task status updated"
          },
          "401": {
            "description": "Unauthorized - missing or invalid token"
          }
        }
      }
    },
    "/task/grouped": {
      "get": {
        "summary": "Get tasks grouped by status or team",
        "tags": [
          "Task"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "by",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "status",
                "team"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Grouped tasks object"
          },
          "400": {
            "description": "Invalid grouping method"
          }
        }
      }
    },
    "/task/all": {
      "delete": {
        "summary": "Delete all tasks (cascade update user.taskId/tasks)",
        "description": "Deletes all tasks in the system.\nAlso clears all users' `taskId` and `tasks` fields.\n",
        "tags": [
          "Task"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All tasks deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/team": {
      "post": {
        "summary": "Create a new team",
        "tags": [
          "Team"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "teamName"
                ],
                "properties": {
                  "teamName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Team created"
          }
        }
      }
    },
    "/team/{teamId}/member": {
      "patch": {
        "summary": "Add a user to a team",
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId"
                ],
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Member added to team"
          }
        }
      }
    },
    "/team/{teamId}/role": {
      "patch": {
        "summary": "Assign a role to a team member",
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId",
                  "role"
                ],
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Role assigned"
          }
        }
      }
    },
    "/team/{teamId}": {
      "get": {
        "summary": "Get team information by ID",
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Team object returned"
          }
        }
      },
      "delete": {
        "summary": "Delete a team by ID (cascade clear user.teamId)",
        "description": "Deletes a team by its ID.\nAlso clears the `teamId` field of all users who belonged to this team.\n",
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "description": "The ID of the team to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Team deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "team": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Team not found"
          }
        }
      }
    },
    "/team/{teamId}/members/detailed": {
      "get": {
        "summary": "Get detailed information of all team members",
        "description": "Returns detailed information for all members in a team, including userId, username, image, phone, role, status, and assigned tasks (taskId, title, status, deadline).\n",
        "tags": [
          "Team"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of member detailed info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "image": {
                        "type": "string",
                        "nullable": true
                      },
                      "phone": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "online",
                          "busy",
                          "offline"
                        ]
                      },
                      "tasks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "taskId": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "deadline": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Team not found"
          }
        }
      }
    },
    "/team/{teamId}/leave": {
      "post": {
        "summary": "Let a user leave the team",
        "tags": [
          "Team"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Team ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId"
                ],
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "ID of the user leaving the team"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User left the team or team deleted"
          },
          "400": {
            "description": "User not in team"
          },
          "404": {
            "description": "Team not found"
          }
        }
      }
    },
    "/user/status/all": {
      "get": {
        "summary": "Get the status of all users",
        "tags": [
          "UserStatus"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Array of userId and status"
          }
        }
      }
    },
    "/user/{userId}/status": {
      "get": {
        "summary": "Get a user's status by ID",
        "tags": [
          "UserStatus"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "The user's status"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "summary": "Set a user's status",
        "tags": [
          "UserStatus"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "online",
                      "busy",
                      "offline"
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Status updated"
          },
          "400": {
            "description": "Invalid status"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/{userId}/profile": {
      "patch": {
        "summary": "Update user's profile",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated"
          },
          "400": {
            "description": "No valid profile fields to update"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "get": {
        "summary": "Get user's profile by ID",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile object"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/all": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of users"
          }
        }
      }
    },
    "/user/{userId}": {
      "delete": {
        "summary": "Delete a user by ID (cascade update in tasks and teams)",
        "description": "Deletes a user by their ID.\nAlso removes the userId from all `tasks.userIds` arrays and all `teams.members` arrays.\n",
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "The ID of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "tags": []
}